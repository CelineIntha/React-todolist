{"ast":null,"code":"var _jsxFileName = \"/Users/celine/Desktop/DFS/React/todolist/src/components/ToDoList/Task.js\";\nimport React from \"react\";\nimport TaskProps from \"./TaskProps\";\nimport NewTask from \"./NewTask\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Task({\n  index,\n  t,\n  onDelete,\n  onTaskChecked,\n  onTaskUpdate\n}) {\n  // console.log(\"Task Props:\", t);\n\n  const handleDelete = () => {\n    onDelete(index);\n    console.log('Suppression  de la t창che : \"' + t.name + '\"');\n  };\n  const handleCheck = () => {\n    onTaskChecked(index);\n    console.log('Validation de la t창che : \"' + t.name + '\"');\n  };\n  const handleUpdateText = () => {\n    onTaskUpdate(updatedText);\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          textDecoration: t.completed ? 'line-through' : 'none'\n        },\n        children: [isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: updatedText,\n            onChange: e => setUpdatedText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUpdateText,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [t.name, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsEditing(true),\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: \"pen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: \"xmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","TaskProps","NewTask","FontAwesomeIcon","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Task","index","t","onDelete","onTaskChecked","onTaskUpdate","handleDelete","console","log","name","handleCheck","handleUpdateText","updatedText","setIsEditing","children","style","textDecoration","completed","isEditing","type","value","onChange","e","setUpdatedText","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","_c","$RefreshReg$"],"sources":["/Users/celine/Desktop/DFS/React/todolist/src/components/ToDoList/Task.js"],"sourcesContent":["import React from \"react\";\nimport TaskProps from \"./TaskProps\";\nimport NewTask from \"./NewTask\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button } from 'react-bootstrap';\n\nfunction Task({ index, t, onDelete, onTaskChecked, onTaskUpdate }) {\n  // console.log(\"Task Props:\", t);\n\n  const handleDelete = () => {\n    onDelete(index);\n    console.log('Suppression  de la t창che : \"' + t.name +'\"');\n  };\n\n  const handleCheck = () => {\n    onTaskChecked(index);\n    console.log('Validation de la t창che : \"' + t.name + '\"');\n  };\n\n  const handleUpdateText = () => {\n    onTaskUpdate(updatedText);\n    setIsEditing(false);\n  };\n\n  \n  return (\n    <div>\n      <ul>\n        <li style={{ textDecoration: t.completed ? 'line-through' : 'none' }}>\n          {isEditing ? (\n            <>\n              <input\n                type=\"text\"\n                value={updatedText}\n                onChange={(e) => setUpdatedText(e.target.value)}\n              />\n              <button onClick={handleUpdateText}>Update</button>\n            </>\n          ) : (\n            <>\n              {t.name}{\" \"}\n              <button onClick={() => setIsEditing(true)}>\n                <FontAwesomeIcon icon=\"pen\" />\n              </button>\n            </>\n          )}\n          <button onClick={handleDelete}>\n            <FontAwesomeIcon icon=\"xmark\" />\n          </button>\n          {/* <Button type=\"primary\">Bouton</Button> */}\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Task;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,SAASC,IAAIA,CAAC;EAAEC,KAAK;EAAEC,CAAC;EAAEC,QAAQ;EAAEC,aAAa;EAAEC;AAAa,CAAC,EAAE;EACjE;;EAEA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBH,QAAQ,CAACF,KAAK,CAAC;IACfM,OAAO,CAACC,GAAG,CAAC,8BAA8B,GAAGN,CAAC,CAACO,IAAI,GAAE,GAAG,CAAC;EAC3D,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBN,aAAa,CAACH,KAAK,CAAC;IACpBM,OAAO,CAACC,GAAG,CAAC,4BAA4B,GAAGN,CAAC,CAACO,IAAI,GAAG,GAAG,CAAC;EAC1D,CAAC;EAED,MAAME,gBAAgB,GAAGA,CAAA,KAAM;IAC7BN,YAAY,CAACO,WAAW,CAAC;IACzBC,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAGD,oBACEhB,OAAA;IAAAiB,QAAA,eACEjB,OAAA;MAAAiB,QAAA,eACEjB,OAAA;QAAIkB,KAAK,EAAE;UAAEC,cAAc,EAAEd,CAAC,CAACe,SAAS,GAAG,cAAc,GAAG;QAAO,CAAE;QAAAH,QAAA,GAClEI,SAAS,gBACRrB,OAAA,CAAAE,SAAA;UAAAe,QAAA,gBACEjB,OAAA;YACEsB,IAAI,EAAC,MAAM;YACXC,KAAK,EAAER,WAAY;YACnBS,QAAQ,EAAGC,CAAC,IAAKC,cAAc,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK;UAAE;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CAAC,eACF/B,OAAA;YAAQgC,OAAO,EAAElB,gBAAiB;YAAAG,QAAA,EAAC;UAAM;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,eAClD,CAAC,gBAEH/B,OAAA,CAAAE,SAAA;UAAAe,QAAA,GACGZ,CAAC,CAACO,IAAI,EAAE,GAAG,eACZZ,OAAA;YAAQgC,OAAO,EAAEA,CAAA,KAAMhB,YAAY,CAAC,IAAI,CAAE;YAAAC,QAAA,eACxCjB,OAAA,CAACH,eAAe;cAACoC,IAAI,EAAC;YAAK;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC;QAAA,eACT,CACH,eACD/B,OAAA;UAAQgC,OAAO,EAAEvB,YAAa;UAAAQ,QAAA,eAC5BjB,OAAA,CAACH,eAAe;YAACoC,IAAI,EAAC;UAAO;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACG,EAAA,GAhDQ/B,IAAI;AAkDb,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}