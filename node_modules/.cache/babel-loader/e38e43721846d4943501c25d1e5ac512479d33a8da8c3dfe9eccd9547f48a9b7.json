{"ast":null,"code":"var _jsxFileName = \"/Users/celine/Desktop/DFS/React/todolist/src/components/ToDoList/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Task from \"./Task\";\nimport TaskProps from \"./TaskProps\";\nimport NewTask from \"./NewTask\";\n// import \"../Bootstrap/Style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    // Permet de restituer les tâches du localStorage lors du montage du composant\n    const storedTasks = localStorage.getItem(\"tasks\");\n    if (storedTasks) {\n      setTasks(JSON.parse(storedTasks));\n    }\n  }, []); // Le tableau vide signifie que cela ne doit être exécuté qu'une seule fois au montage\n\n  // Fonction qui permet de gérer l'ajout de nouvelles tâches\n  const handleNewTask = newTask => {\n    const currentDate = new Date();\n    newTask.creationDate = currentDate.toLocaleDateString();\n    setTasks([...tasks, newTask]);\n    localStorage.setItem(\"tasks\", JSON.stringify([...tasks, newTask]));\n  };\n  const handleTaskDelete = index => {\n    let newTasksList = [...tasks];\n    newTasksList.splice(index, 1);\n    setTasks(newTasksList);\n    localStorage.setItem(\"tasks\", JSON.stringify(newTasksList));\n  };\n  const handleTaskChecked = index => {\n    let newTasksList = [...tasks];\n    if (newTasksList[index] && typeof newTasksList[index].completed !== \"undefined\") {\n      newTasksList[index].completed = !newTasksList[index].completed;\n      setTasks(newTasksList);\n      localStorage.setItem(\"tasks\", JSON.stringify(newTasksList));\n    }\n  };\n  const handleTaskUpdate = (index, updatedText) => {\n    let newTasksList = [...tasks];\n    if (newTasksList[index]) {\n      newTasksList[index].name = updatedText;\n      setTasks(newTasksList);\n      localStorage.setItem(\"tasks\", JSON.stringify(newTasksList));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Liste des t\\xE2ches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(NewTask, {\n        onSubmit: handleNewTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Num\\xE9ro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"T\\xE2che\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Date d'ajout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.map((t, index) => /*#__PURE__*/_jsxDEV(Task, {\n          index: index,\n          t: t,\n          onTaskChecked: index => handleTaskChecked(index),\n          onDelete: index => handleTaskDelete(index),\n          onTaskUpdate: updatedText => handleTaskUpdate(index, updatedText)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","Task","TaskProps","NewTask","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","storedTasks","localStorage","getItem","JSON","parse","handleNewTask","newTask","currentDate","Date","creationDate","toLocaleDateString","setItem","stringify","handleTaskDelete","index","newTasksList","splice","handleTaskChecked","completed","handleTaskUpdate","updatedText","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","scope","map","t","onTaskChecked","onDelete","onTaskUpdate","_c","$RefreshReg$"],"sources":["/Users/celine/Desktop/DFS/React/todolist/src/components/ToDoList/TaskList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Task from \"./Task\";\nimport TaskProps from \"./TaskProps\";\nimport NewTask from \"./NewTask\";\n// import \"../Bootstrap/Style.css\";\n\nfunction TaskList() {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n// Permet de restituer les tâches du localStorage lors du montage du composant\n    const storedTasks = localStorage.getItem(\"tasks\");\n    if (storedTasks) {\n      setTasks(JSON.parse(storedTasks));\n    }\n  }, []); // Le tableau vide signifie que cela ne doit être exécuté qu'une seule fois au montage\n\n    // Fonction qui permet de gérer l'ajout de nouvelles tâches\n  const handleNewTask = (newTask) => {\n    const currentDate = new Date();\n    newTask.creationDate = currentDate.toLocaleDateString();\n    setTasks([...tasks, newTask]);\n    localStorage.setItem(\"tasks\", JSON.stringify([...tasks, newTask]));\n  };\n\n  const handleTaskDelete = (index) => {\n    let newTasksList = [...tasks];\n    newTasksList.splice(index, 1);\n    setTasks(newTasksList);\n    localStorage.setItem(\"tasks\", JSON.stringify(newTasksList));\n  };\n\n  const handleTaskChecked = (index) => {\n    let newTasksList = [...tasks];\n    if (\n      newTasksList[index] &&\n      typeof newTasksList[index].completed !== \"undefined\"\n    ) {\n      newTasksList[index].completed = !newTasksList[index].completed;\n      setTasks(newTasksList);\n      localStorage.setItem(\"tasks\", JSON.stringify(newTasksList));\n    }\n  };\n\n  const handleTaskUpdate = (index, updatedText) => {\n    let newTasksList = [...tasks];\n    if (newTasksList[index]) {\n      newTasksList[index].name = updatedText;\n      setTasks(newTasksList);\n      localStorage.setItem(\"tasks\", JSON.stringify(newTasksList));\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"text-center\">Liste des tâches</h1>\n      <div className=\"d-flex justify-content-center align-items-center\">\n        <NewTask onSubmit={handleNewTask} />\n      </div>\n\n      <table className=\"table\">\n        <thead>\n          <tr>\n          <th scope=\"col\">Numéro</th>\n            <th scope=\"col\">Tâche</th>\n            <th scope=\"col\">Date d'ajout</th>\n            <th scope=\"col\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tasks.map((t, index) => (\n            <Task\n              key={index}\n              index={index}\n              t={t}\n              onTaskChecked={(index) => handleTaskChecked(index)}\n              onDelete={(index) => handleTaskDelete(index)}\n              onTaskUpdate={(updatedText) => handleTaskUpdate(index, updatedText)}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\nexport default TaskList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}