{"ast":null,"code":"var _jsxFileName = \"/Users/celine/Desktop/DFS/React/todolist/src/components/ToDoList/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Task from \"./Task\";\nimport TaskProps from \"./TaskProps\";\nimport NewTask from \"./NewTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const handleNewTask = newTask => {\n    console.log(\"New Task:\", newTask);\n    setTasks([...tasks, newTask]);\n    // Permet de sauvegarder la tâche dans le localStorage\n    localStorage.setItem(\"tasks\", JSON.stringify([...tasks, newTask]));\n  };\n  const handleTaskDelete = index => {\n    let newTasksList = [...tasks];\n    newTasksList.splice(index, 1);\n    setTasks(newTasksList);\n    // Permet de sauvegarder la tâche dans le localStorage\n    localStorage.setItem(\"tasks\", JSON.stringify(newTasksList));\n  };\n  const handleTaskChecked = index => {\n    let newTasksList = [...tasks];\n    if (newTasksList[index] && typeof newTasksList[index].completed !== \"undefined\") {\n      newTasksList[index].completed = !newTasksList[index].completed;\n      setTasks(newTasksList);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Liste des t\\xE2ches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewTask, {\n      onSubmit: handleNewTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), tasks.map((t, index) => /*#__PURE__*/_jsxDEV(Task, {\n      index: index // ajout de index comme propriété\n      ,\n      t: t,\n      onTaskChecked: index => handleTaskChecked(index),\n      onDelete: index => handleTaskDelete(index)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","Task","TaskProps","NewTask","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","handleNewTask","newTask","console","log","localStorage","setItem","JSON","stringify","handleTaskDelete","index","newTasksList","splice","handleTaskChecked","completed","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","t","onTaskChecked","onDelete","_c","$RefreshReg$"],"sources":["/Users/celine/Desktop/DFS/React/todolist/src/components/ToDoList/TaskList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Task from \"./Task\";\nimport TaskProps from \"./TaskProps\";\nimport NewTask from \"./NewTask\";\n\nfunction TaskList() {\n  const [tasks, setTasks] = useState([]);\n\n  const handleNewTask = (newTask) => {\n    console.log(\"New Task:\", newTask);\n    setTasks([...tasks, newTask]);\n      // Permet de sauvegarder la tâche dans le localStorage\n  localStorage.setItem(\"tasks\", JSON.stringify([...tasks, newTask]));\n  };\n\n  const handleTaskDelete = (index) => {\n    let newTasksList = [...tasks];\n    newTasksList.splice(index, 1);\n    setTasks(newTasksList);\n      // Permet de sauvegarder la tâche dans le localStorage\n  localStorage.setItem(\"tasks\", JSON.stringify(newTasksList));\n  };\n\n  const handleTaskChecked = (index) => {\n    let newTasksList = [...tasks];\n\n    if (\n      newTasksList[index] &&\n      typeof newTasksList[index].completed !== \"undefined\"\n    ) {\n      newTasksList[index].completed = !newTasksList[index].completed;\n      setTasks(newTasksList);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Liste des tâches</h1>\n\n      {/* J'importe le composant \"NewTask\" qui me permet d'ajouter une nouvelle tâche */}\n      <NewTask onSubmit={handleNewTask} />\n\n      {/* Grâce à la fonction map, j'affiche la liste de mes tâches du tableau tasksList */}\n      {tasks.map((t, index) => (\n        <Task\n          key={index}\n          index={index} // ajout de index comme propriété\n          t={t}\n          onTaskChecked={(index) => handleTaskChecked(index)}\n          onDelete={(index) => handleTaskDelete(index)}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default TaskList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,aAAa,GAAIC,OAAO,IAAK;IACjCC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,OAAO,CAAC;IACjCF,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEG,OAAO,CAAC,CAAC;IAC3B;IACJG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAAC,CAAC,GAAGT,KAAK,EAAEG,OAAO,CAAC,CAAC,CAAC;EAClE,CAAC;EAED,MAAMO,gBAAgB,GAAIC,KAAK,IAAK;IAClC,IAAIC,YAAY,GAAG,CAAC,GAAGZ,KAAK,CAAC;IAC7BY,YAAY,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IAC7BV,QAAQ,CAACW,YAAY,CAAC;IACpB;IACJN,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACG,YAAY,CAAC,CAAC;EAC3D,CAAC;EAED,MAAME,iBAAiB,GAAIH,KAAK,IAAK;IACnC,IAAIC,YAAY,GAAG,CAAC,GAAGZ,KAAK,CAAC;IAE7B,IACEY,YAAY,CAACD,KAAK,CAAC,IACnB,OAAOC,YAAY,CAACD,KAAK,CAAC,CAACI,SAAS,KAAK,WAAW,EACpD;MACAH,YAAY,CAACD,KAAK,CAAC,CAACI,SAAS,GAAG,CAACH,YAAY,CAACD,KAAK,CAAC,CAACI,SAAS;MAC9Dd,QAAQ,CAACW,YAAY,CAAC;IACxB;EACF,CAAC;EAED,oBACEf,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGzBvB,OAAA,CAACF,OAAO;MAAC0B,QAAQ,EAAEnB;IAAc;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAGnCpB,KAAK,CAACsB,GAAG,CAAC,CAACC,CAAC,EAAEZ,KAAK,kBAClBd,OAAA,CAACJ,IAAI;MAEHkB,KAAK,EAAEA,KAAM,CAAC;MAAA;MACdY,CAAC,EAAEA,CAAE;MACLC,aAAa,EAAGb,KAAK,IAAKG,iBAAiB,CAACH,KAAK,CAAE;MACnDc,QAAQ,EAAGd,KAAK,IAAKD,gBAAgB,CAACC,KAAK;IAAE,GAJxCA,KAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKX,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACrB,EAAA,CAjDQD,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAmDjB,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}