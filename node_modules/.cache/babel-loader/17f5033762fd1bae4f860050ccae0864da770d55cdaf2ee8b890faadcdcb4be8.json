{"ast":null,"code":"var _jsxFileName = \"/Users/celine/Desktop/DFS/React/todolist/src/components/ToDoList/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Task from \"./Task\";\nimport TaskProps from \"./TaskProps\";\nimport NewTask from \"./NewTask\";\n// import \"../Bootstrap/Style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const storedTasks = localStorage.getItem(\"tasks\");\n    if (storedTasks) {\n      setTasks(JSON.parse(storedTasks));\n    }\n  }, []);\n  const handleNewTask = newTask => {\n    setTasks([...tasks, newTask]);\n    localStorage.setItem(\"tasks\", JSON.stringify([...tasks, newTask]));\n  };\n  const handleTaskDelete = index => {\n    let newTasksList = [...tasks];\n    newTasksList.splice(index, 1);\n    setTasks(newTasksList);\n    localStorage.setItem(\"tasks\", JSON.stringify(newTasksList));\n  };\n  const handleTaskChecked = index => {\n    let newTasksList = [...tasks];\n    if (newTasksList[index] && typeof newTasksList[index].completed !== \"undefined\") {\n      newTasksList[index].completed = !newTasksList[index].completed;\n      setTasks(newTasksList);\n      localStorage.setItem(\"tasks\", JSON.stringify(newTasksList));\n    }\n  };\n  const handleTaskUpdate = (index, updatedText) => {\n    let newTasksList = [...tasks];\n    if (newTasksList[index]) {\n      newTasksList[index].name = updatedText;\n      setTasks(newTasksList);\n      localStorage.setItem(\"tasks\", JSON.stringify(newTasksList));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Liste des t\\xE2ches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(NewTask, {\n      onSubmit: handleNewTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-container\",\n      children: tasks.map((t, index) => /*#__PURE__*/_jsxDEV(Task, {\n        index: index,\n        t: t,\n        onTaskChecked: index => handleTaskChecked(index),\n        onDelete: index => handleTaskDelete(index),\n        onTaskUpdate: updatedText => handleTaskUpdate(index, updatedText)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","Task","TaskProps","NewTask","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","storedTasks","localStorage","getItem","JSON","parse","handleNewTask","newTask","setItem","stringify","handleTaskDelete","index","newTasksList","splice","handleTaskChecked","completed","handleTaskUpdate","updatedText","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","t","onTaskChecked","onDelete","onTaskUpdate","_c","$RefreshReg$"],"sources":["/Users/celine/Desktop/DFS/React/todolist/src/components/ToDoList/TaskList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Task from \"./Task\";\nimport TaskProps from \"./TaskProps\";\nimport NewTask from \"./NewTask\";\n// import \"../Bootstrap/Style.css\";\n\nfunction TaskList() {\n    const [tasks, setTasks] = useState([]);\n  \n    useEffect(() => {\n      const storedTasks = localStorage.getItem(\"tasks\");\n      if (storedTasks) {\n        setTasks(JSON.parse(storedTasks));\n      }\n    }, []);\n  \n    const handleNewTask = (newTask) => {\n      setTasks([...tasks, newTask]);\n      localStorage.setItem(\"tasks\", JSON.stringify([...tasks, newTask]));\n    };\n  \n    const handleTaskDelete = (index) => {\n      let newTasksList = [...tasks];\n      newTasksList.splice(index, 1);\n      setTasks(newTasksList);\n      localStorage.setItem(\"tasks\", JSON.stringify(newTasksList));\n    };\n  \n    const handleTaskChecked = (index) => {\n      let newTasksList = [...tasks];\n      if (newTasksList[index] && typeof newTasksList[index].completed !== \"undefined\") {\n        newTasksList[index].completed = !newTasksList[index].completed;\n        setTasks(newTasksList);\n        localStorage.setItem(\"tasks\", JSON.stringify(newTasksList));\n      }\n    };\n  \n    const handleTaskUpdate = (index, updatedText) => {\n      let newTasksList = [...tasks];\n      if (newTasksList[index]) {\n        newTasksList[index].name = updatedText;\n        setTasks(newTasksList);\n        localStorage.setItem(\"tasks\", JSON.stringify(newTasksList));\n      }\n    };\n  \n    return (\n        <div className=\"container\">\n          <h1>Liste des t√¢ches</h1>\n          <NewTask onSubmit={handleNewTask} />\n    \n          <div className=\"tasks-container\">\n            {tasks.map((t, index) => (\n              <Task\n                key={index}\n                index={index}\n                t={t}\n                onTaskChecked={(index) => handleTaskChecked(index)}\n                onDelete={(index) => handleTaskDelete(index)}\n                onTaskUpdate={(updatedText) => handleTaskUpdate(index, updatedText)}\n              />\n            ))}\n          </div>\n        </div>\n      );\n    }\n    \n  \n  export default TaskList;\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}