{"ast":null,"code":"var _jsxFileName = \"/Users/celine/Desktop/DFS/React/todolist/src/components/ToDoList/NewTask.js\";\nimport React from \"react\";\nimport TaskProps from \"./TaskProps\";\n\n// Composant qui permet d'ajouter une nouvelle tâche\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewTask({\n  onSubmit\n}) {\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const {\n      name\n    } = form.elements; // Utilisez form.elements pour obtenir l'élément avec le nom \"name\"\n    let task = new TaskProps(name.value);\n    if (name.value.trim() !== \"\") {\n      onSubmit(task);\n    } else {\n      alert(\"Veuillez remplir le champ\");\n    }\n    form.reset();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Ajouter une nouvelle t\\xE2che\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Ajouter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = NewTask;\nexport default NewTask;\nvar _c;\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"names":["React","TaskProps","jsxDEV","_jsxDEV","NewTask","onSubmit","handleSubmit","e","preventDefault","form","target","name","elements","task","value","trim","alert","reset","children","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/celine/Desktop/DFS/React/todolist/src/components/ToDoList/NewTask.js"],"sourcesContent":["import React from \"react\";\nimport TaskProps from \"./TaskProps\";\n\n// Composant qui permet d'ajouter une nouvelle tâche\nfunction NewTask({ onSubmit }) {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const form = e.target;\n    const { name } = form.elements; // Utilisez form.elements pour obtenir l'élément avec le nom \"name\"\n    let task = new TaskProps(name.value);\n    if (name.value.trim() !== \"\") {\n      onSubmit(task);\n    } else {\n      alert(\"Veuillez remplir le champ\");\n    }\n    form.reset();\n  };\n\n  return (\n    <div>\n      <h4>Ajouter une nouvelle tâche</h4>\n      <form onSubmit={(e) => handleSubmit(e)}>\n        <input type=\"text\" name=\"name\" /> {/* Ajoutez le nom de l'input */}\n        <button type=\"submit\">Ajouter</button>{\" \"}\n        {/* Assurez-vous que le bouton est de type \"submit\" */}\n      </form>\n    </div>\n  );\n}\n\nexport default NewTask;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;;AAEnC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,OAAOA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAC7B,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,IAAI,GAAGF,CAAC,CAACG,MAAM;IACrB,MAAM;MAAEC;IAAK,CAAC,GAAGF,IAAI,CAACG,QAAQ,CAAC,CAAC;IAChC,IAAIC,IAAI,GAAG,IAAIZ,SAAS,CAACU,IAAI,CAACG,KAAK,CAAC;IACpC,IAAIH,IAAI,CAACG,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC5BV,QAAQ,CAACQ,IAAI,CAAC;IAChB,CAAC,MAAM;MACLG,KAAK,CAAC,2BAA2B,CAAC;IACpC;IACAP,IAAI,CAACQ,KAAK,CAAC,CAAC;EACd,CAAC;EAED,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCnB,OAAA;MAAME,QAAQ,EAAGE,CAAC,IAAKD,YAAY,CAACC,CAAC,CAAE;MAAAW,QAAA,gBACrCf,OAAA;QAAOoB,IAAI,EAAC,MAAM;QAACZ,IAAI,EAAC;MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC,eAClCnB,OAAA;QAAQoB,IAAI,EAAC,QAAQ;QAAAL,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAAC,GAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACE,EAAA,GAxBQpB,OAAO;AA0BhB,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}