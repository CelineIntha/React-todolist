{"ast":null,"code":"var _jsxFileName = \"/Users/celine/Desktop/DFS/React/todolist/src/components/ToDoList/Task.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport TaskProps from \"./TaskProps\";\n// import \"../Bootstrap/Style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Task({\n  index,\n  t,\n  onDelete,\n  onTaskChecked,\n  onTaskUpdate\n}) {\n  _s();\n  // État local qui permet de gérer l'édition de text et la mise à jour du texte. L'état est false de base.\n  const [isEditing, setIsEditing] = useState(false);\n  const [updatedText, setUpdatedText] = useState(t.name);\n  const handleDelete = () => {\n    // Afficher une alerte de confirmation avant la suppression\n    const confirmDelete = window.confirm(`Êtes-vous sûr de vouloir supprimer la tâche : \"${t.name}\" ?`);\n    if (confirmDelete) {\n      onDelete(index);\n      console.log('Suppression de la tâche : \"' + t.name + '\"');\n    }\n  };\n  const handleCheck = () => {\n    onTaskChecked(index);\n    console.log('Validation de la tâche : \"' + t.name + '\"');\n  };\n  const handleUpdateText = () => {\n    // Appelle la fonction onTaskUpdate avec le texte mis à jour\n    onTaskUpdate(updatedText);\n    console.log('Modification de la tâche : \"' + t.name + '\"');\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      style: {\n        textDecoration: t.completed ? \"line-through\" : \"none\",\n        backgroundColor: t.completed ? \"#dff5c9\" : \"initial\"\n      },\n      children: index + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      style: {\n        textDecoration: t.completed ? \"line-through\" : \"none\",\n        backgroundColor: t.completed ? \"#dff5c9\" : \"initial\"\n      },\n      children: isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: updatedText,\n          onChange: e => setUpdatedText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-btn\",\n          onClick: handleUpdateText,\n          children: \"Modifier la t\\xE2che\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: t.name\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      style: {\n        textDecoration: t.completed ? \"line-through\" : \"none\",\n        backgroundColor: t.completed ? \"#dff5c9\" : \"initial\"\n      },\n      children: t.creationDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"btn-actions\",\n      style: {\n        backgroundColor: t.completed ? \"#dff5c9\" : \"initial\"\n      },\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsEditing(!isEditing),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: \"pen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"check-btn\",\n          onClick: handleCheck,\n          style: {\n            backgroundColor: t.completed ? \"green\" : \"var(--accent)\"\n          },\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: \"check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-btn\",\n          onClick: handleDelete,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: \"xmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Task, \"AFOdODyRygAeBUpM2pOt4Tt9PlU=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","TaskProps","jsxDEV","_jsxDEV","Fragment","_Fragment","Task","index","t","onDelete","onTaskChecked","onTaskUpdate","_s","isEditing","setIsEditing","updatedText","setUpdatedText","name","handleDelete","confirmDelete","window","confirm","console","log","handleCheck","handleUpdateText","children","style","textDecoration","completed","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","className","onClick","creationDate","icon","_c","$RefreshReg$"],"sources":["/Users/celine/Desktop/DFS/React/todolist/src/components/ToDoList/Task.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport TaskProps from \"./TaskProps\";\n// import \"../Bootstrap/Style.css\";\n\nfunction Task({ index, t, onDelete, onTaskChecked, onTaskUpdate }) {\n\n    // État local qui permet de gérer l'édition de text et la mise à jour du texte. L'état est false de base.\n  const [isEditing, setIsEditing] = useState(false);\n  const [updatedText, setUpdatedText] = useState(t.name);\n\n  const handleDelete = () => {\n    // Afficher une alerte de confirmation avant la suppression\n    const confirmDelete = window.confirm(\n      `Êtes-vous sûr de vouloir supprimer la tâche : \"${t.name}\" ?`\n    );\n\n    if (confirmDelete) {\n      onDelete(index);\n      console.log('Suppression de la tâche : \"' + t.name + '\"');\n    }\n  };\n\n  const handleCheck = () => {\n    onTaskChecked(index);\n    console.log('Validation de la tâche : \"' + t.name + '\"');\n  };\n\n  const handleUpdateText = () => {\n        // Appelle la fonction onTaskUpdate avec le texte mis à jour\n    onTaskUpdate(updatedText);\n    console.log('Modification de la tâche : \"' + t.name + '\"');\n    setIsEditing(false);\n  };\n\n  return (\n    <tr>\n      <td style={{ textDecoration: t.completed ? \"line-through\" : \"none\",backgroundColor: t.completed ? \"#dff5c9\" : \"initial\" }}>{index+1}</td>\n       <td style={{ textDecoration: t.completed ? \"line-through\" : \"none\", backgroundColor: t.completed ? \"#dff5c9\" : \"initial\" }}>\n        {isEditing ? (\n          <>\n            <input\n              type=\"text\"\n              value={updatedText}\n              onChange={(e) => setUpdatedText(e.target.value)}\n            />\n            <button className=\"edit-btn\" onClick={handleUpdateText}>Modifier la tâche</button>\n          </>\n        ) : (\n          <>{t.name}</>\n        )}\n      </td>\n      <td style={{ textDecoration: t.completed ? \"line-through\" : \"none\", backgroundColor: t.completed ? \"#dff5c9\" : \"initial\" }}>\n        {t.creationDate}\n      </td>\n      <td className=\"btn-actions\" style={{ backgroundColor: t.completed ? \"#dff5c9\" : \"initial\"}}>\n          <>\n            <button onClick={() => setIsEditing(!isEditing)}>\n              <FontAwesomeIcon icon=\"pen\" />\n            </button>\n            <button className=\"check-btn\" onClick={handleCheck} style={{ backgroundColor: t.completed ? \"green\" : \"var(--accent)\"}}>\n              <FontAwesomeIcon icon=\"check\" />\n            </button>\n            <button className=\"delete-btn\" onClick={handleDelete}>\n              <FontAwesomeIcon icon=\"xmark\" />\n            </button>\n          </>\n      </td>\n    </tr>\n  );\n}\n\nexport default Task;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}