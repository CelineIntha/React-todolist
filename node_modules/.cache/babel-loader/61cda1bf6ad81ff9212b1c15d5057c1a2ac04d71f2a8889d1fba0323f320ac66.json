{"ast":null,"code":"var _jsxFileName = \"/Users/celine/Desktop/DFS/React/todolist/src/components/ToDoList/Task.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TaskProps from \"./TaskProps\";\nimport NewTask from \"./NewTask\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button } from \"react-bootstrap\";\n// import \"../Bootstrap/Style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Task({\n  index,\n  t,\n  onDelete,\n  onTaskChecked,\n  onTaskUpdate\n}) {\n  _s();\n  // console.log(\"Task Props:\", t);\n  // État local qui permet de gérer l'édition de text et la mise à jour du texte\n  const [isEditing, setIsEditing] = useState(false);\n  const [updatedText, setUpdatedText] = useState(t.name);\n  const handleDelete = () => {\n    onDelete(index);\n    console.log('Suppression  de la tâche : \"' + t.name + '\"');\n  };\n  const handleCheck = () => {\n    onTaskChecked(index);\n    console.log('Validation de la tâche : \"' + t.name + '\"');\n  };\n  const handleUpdateText = () => {\n    // Appelle la fonction onTaskUpdate avec le texte mis à jour\n    onTaskUpdate(updatedText);\n    console.log('Modification de la tâche : \"' + t.name + '\"');\n    // Désactive le mode édition\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"taskList\",\n        children: isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: updatedText,\n            onChange: e => setUpdatedText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUpdateText,\n            children: \"Modifier la t\\xE2che\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [t.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsEditing(true),\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: \"pen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCheck,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: \"check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDelete,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: \"xmark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Task, \"AFOdODyRygAeBUpM2pOt4Tt9PlU=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","TaskProps","NewTask","FontAwesomeIcon","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Task","index","t","onDelete","onTaskChecked","onTaskUpdate","_s","isEditing","setIsEditing","updatedText","setUpdatedText","name","handleDelete","console","log","handleCheck","handleUpdateText","className","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","_c","$RefreshReg$"],"sources":["/Users/celine/Desktop/DFS/React/todolist/src/components/ToDoList/Task.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport TaskProps from \"./TaskProps\";\nimport NewTask from \"./NewTask\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button } from \"react-bootstrap\";\n// import \"../Bootstrap/Style.css\";\n\nfunction Task({ index, t, onDelete, onTaskChecked, onTaskUpdate }) {\n  // console.log(\"Task Props:\", t);\n  // État local qui permet de gérer l'édition de text et la mise à jour du texte\n  const [isEditing, setIsEditing] = useState(false);\n  const [updatedText, setUpdatedText] = useState(t.name);\n\n  const handleDelete = () => {\n    onDelete(index);\n    console.log('Suppression  de la tâche : \"' + t.name + '\"');\n  };\n\n  const handleCheck = () => {\n    onTaskChecked(index);\n    console.log('Validation de la tâche : \"' + t.name + '\"');\n  };\n\n  const handleUpdateText = () => {\n    // Appelle la fonction onTaskUpdate avec le texte mis à jour\n    onTaskUpdate(updatedText);\n    console.log('Modification de la tâche : \"' + t.name + '\"');\n    // Désactive le mode édition\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"container\">\n      <ul>\n        <li className='taskList'>\n          {isEditing ? (\n            <>\n              <input\n                type=\"text\"\n                value={updatedText}\n                onChange={(e) => setUpdatedText(e.target.value)}\n              />\n              <button onClick={handleUpdateText}>Modifier la tâche</button>\n            </>\n          ) : (\n            <>\n              {t.name}\n              <button onClick={() => setIsEditing(true)}>\n                <FontAwesomeIcon icon=\"pen\" />\n              </button>\n              <button onClick={handleCheck}>\n                <FontAwesomeIcon icon=\"check\" />\n              </button>\n              <button onClick={handleDelete}>\n                <FontAwesomeIcon icon=\"xmark\" />\n              </button>\n            </>\n          )}\n        </li>\n      </ul>\n    </div>\n  );\n}\nexport default Task;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}