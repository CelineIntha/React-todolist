{"ast":null,"code":"var _jsxFileName = \"/Users/celine/Desktop/DFS/React/todolist/src/components/ToDoList/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Task from \"./Task\";\nimport TaskProps from \"./TaskProps\";\nimport NewTask from \"./NewTask\";\n\n// Un tâbleau de tâches\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet tasksList = [new TaskProps(\"Tâche 1\"), new TaskProps(\"Tâche 2\"), new TaskProps(\"Tâche 3\")];\nfunction TaskList(props) {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const handleNewTask = newTask => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Liste des t\\xE2ches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewTask, {\n      onSubmit: handleNewTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), tasksList.map((t, index) => /*#__PURE__*/_jsxDEV(Task, {\n      t: t\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","Task","TaskProps","NewTask","jsxDEV","_jsxDEV","tasksList","TaskList","props","_s","tasks","setTasks","handleNewTask","newTask","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","t","index","_c","$RefreshReg$"],"sources":["/Users/celine/Desktop/DFS/React/todolist/src/components/ToDoList/TaskList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Task from \"./Task\";\nimport TaskProps from \"./TaskProps\";\nimport NewTask from \"./NewTask\";\n\n// Un tâbleau de tâches\nlet tasksList = [\n  new TaskProps(\"Tâche 1\"),\n  new TaskProps(\"Tâche 2\"),\n  new TaskProps(\"Tâche 3\"),\n];\n\nfunction TaskList(props) {\n    const [tasks, setTasks] = useState([]);\n\n    const handleNewTask = (newTask) => {\n        \n    }\n\n  return (\n    <div>\n      <h1>Liste des tâches</h1>\n\n      {/* J'importe le composant \"NewTask\" qui me permet d'ajouter une nouvelle tâche */}\n      <NewTask onSubmit={handleNewTask}/>\n\n      {/* Grâce à la fonction map, j'affiche la liste de mes tâches du tableau tasksList */}\n      {tasksList.map((t, index) => (\n        <Task key={index} t={t} />\n      ))}\n    </div>\n  );\n}\n\nexport default TaskList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,OAAO,MAAM,WAAW;;AAE/B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,IAAIC,SAAS,GAAG,CACd,IAAIJ,SAAS,CAAC,SAAS,CAAC,EACxB,IAAIA,SAAS,CAAC,SAAS,CAAC,EACxB,IAAIA,SAAS,CAAC,SAAS,CAAC,CACzB;AAED,SAASK,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,aAAa,GAAIC,OAAO,IAAK,CAEnC,CAAC;EAEH,oBACER,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGzBb,OAAA,CAACF,OAAO;MAACgB,QAAQ,EAAEP;IAAc;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAGlCZ,SAAS,CAACc,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBACtBjB,OAAA,CAACJ,IAAI;MAAaoB,CAAC,EAAEA;IAAE,GAAZC,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACT,EAAA,CApBQF,QAAQ;AAAAgB,EAAA,GAARhB,QAAQ;AAsBjB,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}